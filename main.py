# tg bot API 5549838211:AAFOBdRyPbbM0OV_-xiSEvFdEyMlugmJJrU

###################################################### Libraries
import telebot
import time
import os
import sqlite3
from openpyxl import load_workbook
from bs4 import BeautifulSoup
import requests
import lxml
import re
from urllib.parse import urljoin, urlparse
from urllib.request import urlretrieve
import shutil
from transliterate import translit
from telebot import types
import telebot
from urllib.request import urlopen
#from goto import with_goto
import hashlib
import webbrowser
import emojis
###################################################### Libraries




PAGE_NUMBERS = []
# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
bot = telebot.TeleBot('6243379302:AAE0bZN3v32-V58wrge8c5ziALrVdX_Ue1c')

MAX_RETIES = 20
PASSWORD = '123'

# –§—É–Ω–∫—Ü–∏—è, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∞—è –∫–æ–º–∞–Ω–¥—É /start
@bot.message_handler(commands=["start"])
def start(message: str, res=False) -> str:
            
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            #btn1 = types.KeyboardButton("–í–û–ï–ù–ù–´–ï –ü–†–ï–°–¢–£–ü–ù–ò–ö–ò")
            #btn2 = types.KeyboardButton("–ë–ê–¢–ê–õ–¨–û–ù –†–ï–í–ê–ù–®")
            #btn3 = types.KeyboardButton("72 –¶–ò–ü–°–û")
            #btn4 = types.KeyboardButton("16 –¶–ò–ü–°–û")
            #btn5 = types.KeyboardButton("–£–ß–ê–°–¢–ù–ò–ö–ò –ê–¢–û")
            #btn6 = types.KeyboardButton("–°–ë–£")
            #btn7 = types.KeyboardButton("–ì–£–†")
            #btn8 = types.KeyboardButton("–°–í–† –£–ö–†–ê–ò–ù–´")
            #btn9 = types.KeyboardButton("–ü–û–õ–ö –ê–ó–û–í")
            #btn10 = types.KeyboardButton("–ë–ê–¢–ê–õ–¨–û–ù –î–û–ù–ë–ê–°–°")
            #btn11 = types.KeyboardButton("–ë–ê–¢–ê–õ–¨–û–ù –¢–û–†–ù–ê–î–û")
            #btn12 = types.KeyboardButton("–ë–ê–¢–ê–õ–¨–û–ù–´ –ê–ô–î–ê–†, –ê–°–ö–ï–†, –î–ù–ï–ü–†-1")
            #btn13 = types.KeyboardButton("–ù–ê–¶. –ö–û–†–ü–£–°")
            #btn14 = types.KeyboardButton("–ü–†–ê–í–´–ô –°–ï–ö–¢–û–†")
            #btn15 = types.KeyboardButton("–£–õ–¨–¢–†–ê–° –§–ö")
            #btn16 = types.KeyboardButton("–ü–ê–¢–†–ò–û–¢–´ –£–ö–†–ê–ò–ù–´, –ü–†–ê–í–û–†–ê–î–ò–ö–ê–õ–´")
            #btn17 = types.KeyboardButton("–ò–ù–û–°–¢–†–ê–ù–ù–´–ï –ù–ê–ï–ú–ù–ò–ö–ò")
            #btn18 = types.KeyboardButton("IT ARMY OF UA")
            #btn19 = types.KeyboardButton("SAVE UA")
            #btn20 = types.KeyboardButton("–ö–ò–ë–ï–†–í–û–ô–°–ö–ê –£–ö–†–ê–ò–ù–´")
            btn1 = types.KeyboardButton("–ü–æ–∏—Å–∫ –ø–æ —Ñ–æ—Ç–æ üîç (–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)")
            btn2 = types.KeyboardButton("–ì–æ–ª–æ—Å–æ–≤–æ–π –ø–æ–∏—Å–∫ üí¨(–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)")
            markup.add(btn1, btn2)
            bot.send_message(message.chat.id, text="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ-–ø–æ–∏—Å–∫–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ '–ú–∞—Ä—Å'", reply_markup=markup)            
            #bot.send_message(message.chat.id, text="–°—Ö–µ–º–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –æ—Ç–¥–µ–ª–µ–Ω–∏–π –Ω–∞—Ü–∏–æ–Ω–∞–ª–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –£–∫—Ä–∞–∏–Ω—ã", reply_markup=markup)

            #bot.send_photo(message.chat.id, photo=open('map.jpg', 'rb'))
            bot.send_photo(message.chat.id, photo=open('plakat14.jpg', 'rb')) 
            #bot.send_message(message.chat.id, text="–£—á–∞—Å—Ç–∏–µ —É–∫—Ä–æ–Ω–∞—Ü–∏–æ–Ω–∞–ª–∏—Å—Ç–æ–≤ –≤ –∞–Ω—Ç–∏–ø—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–µ–Ω–Ω—ã—Ö –º–∏—Ç–∏–Ω–≥–∞—Ö", reply_markup=markup)
            #bot.send_photo(message.chat.id, photo=open('naz2.jpg', 'rb'))
            #bot.send_photo(message.chat.id, photo=open('naz1.jpg', 'rb'))
            bot.send_message(message.chat.id, text="–í–≤–µ–¥–∏—Ç–µ –ò–ú–Ø, –§–ê–ú–ò–õ–ò–Ø –ò–ú–Ø, –§–ê–ú–ò–õ–ò–Ø –ò–ú–Ø –û–¢–ß–ï–°–¢–í–û, –∞ —Ç–∞–∫–∂–µ –≤–æ–∑–º–æ–∂–µ–Ω –≤–≤–æ–¥ —Ä–æ–¥–∞ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –∞–¥—Ä–µ—Å–∞ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è, –¥–æ–ª–∂–Ω–æ—Å—Ç–∏, —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π –∏ –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–µ–≥–æ –£–∫—Ä–∞–∏–Ω—ã –¥–ª—è –ø–æ–∏—Å–∫–∞", reply_markup=markup)
            bot.send_message(message.chat.id, text="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å!", reply_markup=markup)


users_auth = ['200']





@bot.message_handler(content_types=["text"])
def handle_text(message: str) -> str:
        
            
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        
        
        user_id = message.from_user.id
        
        PASSWORD_MD5 = '7c6a180b36896a0a8c02787eeafb0e4c'
        
                  

        if not(user_id in users_auth):
            message.text = bytes(message.text, encoding = 'utf8')
            
            password_test = hashlib.md5()
            password_test.update(b"%s" % message.text)
            password_test = password_test.hexdigest()
            
           
            if (password_test != PASSWORD_MD5):
    
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    bot.send_message(message.chat.id, text="–î–û–°–¢–£–ü –ó–ê–ü–†–ï–©–ï–ù!", reply_markup=markup)
                
            if (password_test == PASSWORD_MD5):
                
                    users_auth.append(user_id)
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    bot.send_message(message.chat.id, text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", reply_markup=markup)
              

                                        
        def nemezida(man:str, *args, **kwargs) -> str:        
            if user_id in users_auth:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True) 
                name = message.text
                           
                ### nemezida
                        
                url = f"https://nemez1da.ru/page/1/?s={man}"
                
                        
                response = requests.get(url, allow_redirects = True,headers={
                        "User-Agent" : "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
                        })


               
                soup = BeautifulSoup(response.text, 'lxml')
                
                
                for page in soup.find_all('a', class_='page-numbers'):                    
                        PAGE_NUMBERS.append(page.text)
                        
                
                      
                
                for i in range (1,  40):           
                    url = f"https://nemez1da.ru/page/{i}/?s={man}"
                    print(url)
                            
                    response = requests.get(url, allow_redirects = True,headers={
                            "User-Agent" : "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
                            })



                    soup = BeautifulSoup(response.text, 'lxml')
                            
                    links = []

                    for link in soup.find_all('a', class_='simple-grid-grid-post-thumbnail-link'):
                                            links.append(link.get('href'))
                   # if not links:
                                            #bot.send_message(message.chat.id, text="–ù–µ –Ω–∞–π–¥–µ–Ω–æ! –ë–∞–∑—ã –¥–æ–ø–æ–ª–Ω—è—é—Ç—Å—è –∏ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è", reply_markup=markup)    

                    

                                    
                    for link in links:
                                            response = requests.get(link, allow_redirects = True, headers={
                                    "User-Agent" : "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
                                    })

                                            soup = BeautifulSoup(response.text, 'lxml')
                                            
                                            name_tag = soup.find('h1')
                                            name = name_tag.text
                                            

                                            category_tag = soup.find(rel = 'category tag')
                                         
                                            
                                            info_tag = soup.find('div', class_ = 'entry-content simple-grid-clearfix')

                                            
                                            ### html


                                            f = open(f'{name} {category_tag.text}.html', 'w',  encoding="utf-8")
                                            html_template_new = f"""
                                                                    <html>
                                                                   
     
                                                                            <head>
                                                                                    
                                                                                    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
                                                                                    <meta name="viewport" content="width=device-width, initial-scale=1">
                                                                                    <title>{man}</title>
                                                                                    <base target="_blank">
                                                                            </head>

                                                                            

                                                                            <body>
                                                                                    <center>

                                                                                            <div class="information">
                                                                                            
                                                                                                   
                                                                                                    <div class="source"><p>–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ó–ê–ü–†–û–°–ï</p></div>
                                                                                                    <div class="row">
                                                                                                            <div class="row-title">–ù–ê–ô–î–ï–ù–û: </div><div class="row-result">{name} {category_tag.text}</div></div>
                                                                                                            <div class="row-title"><p>Google Dorks (ChatGPT): </p></div><div class="row-result">https://www.google.com/search?q='{name}%20intext:'–í–°–£'</div></div>
                                                                                                    <div class="row">
                                                                                                            
                                                                                            </div>

                                                                                    
                                                                                            <div class="information">
                                                                                                    <div class="source"><p>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</p></div>
                                                                                                    {info_tag.text}
                                                                                            </div></div>
                                                                                    </center>
                                                                            </body>
                                                                    </html>
                                                                    """
                                            f.write(html_template_new)
                                            f.close()
                                            bot.send_document(message.chat.id, document = open(f'{name} {category_tag.text}.html','rb'))


                                            ### html
                                            
                                            # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫–∏
                                            pictures = []

                                            try:
                                                    img = soup.find("div", {"class": "photos_single_place"}).find("img")
                                                    print(img["data-src"])
                                                    pictures.append(img["data-src"])
                                            except:
                                                    pass
                                            
                                            try:
                                                    p = requests.get(pictures[0], allow_redirects = True,headers={
                                                    "User-Agent" : "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
                                                    })
                                                    out = open("img.jpg", "wb")
                                                    out.write(p.content)
                                                    bot.send_photo(message.chat.id, photo=open('img.jpg', 'rb'))
                                                   
                                                            
                                                    out.close()
                                            except:
                                                    pass

                                            try:
                                                    p = requests.get(pictures[1], allow_redirects = True,headers={
                                                    "User-Agent" : "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
                                                    })
                                                    out = open("img.jpg", "wb")
                                                    out.write(p.content)
                                                    bot.send_photo(message.chat.id, photo=open('img.jpg', 'rb'))
                                                            
                                                    out.close()
                                            except:
                                                    pass
        def volunteer(man:str, *args, **kwargs) -> str:   
                       

            name_volunteer = message.text        
            url = f"https://volunteer.su/search?text={name_volunteer}"
                
                        
            response = requests.get(url, allow_redirects = True,headers={
                        "User-Agent" : "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
                        })

            soup = BeautifulSoup(response.text, 'lxml')
            print(url)
                            
            response = requests.get(url, allow_redirects = True,headers={
                            "User-Agent" : "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
                            })
                            
            links = []

            for link in soup.find_all('a', rel = 'tag'):
                                      
                                            links.append("https://volunteer.su" + link.get('href'))
            del links[-5:]
            print(links)

            for link in links:
                                            
                                            response = requests.get(link, allow_redirects = True, headers={
                                    "User-Agent" : "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
                                    })

                                            soup = BeautifulSoup(response.text, 'lxml')
                                            
                                            name_tag = soup.find('h2')
                                            name = name_tag.text
                                            print(name)
                                            

                                            #category_tag = soup.find(rel = 'category tag')
                                         
                                            
                                            info_tag = soup.find('div', class_ = 'content')

                                            
                                            ### html

                                            f = open(f'{name}.html', 'w',  encoding="utf-8")
                                            html_template_new = f"""
                                                                    <html>
                                                                   
     
                                                                            <head>
                                                                                    
                                                                                    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
                                                                                    <meta name="viewport" content="width=device-width, initial-scale=1">
                                                                                    <title>{message.text}</title>
                                                                                    <base target="_blank">
                                                                            </head>

                                                                            

                                                                            <body>
                                                                                    <center>

                                                                                            <div class="information">
                                                                                            
                                                                                                   
                                                                                                    <div class="source"><p>–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ó–ê–ü–†–û–°–ï</p></div>
                                                                                                    <div class="row">
                                                                                                            <div class="row-title">–ù–ê–ô–î–ï–ù–û: </div><div class="row-result">{name}</div></div>
                                                                                                            <div class="row-title"><p>Google Dorks (ChatGPT): </p></div><div class="row-result">https://www.google.com/search?q='{name}%20intext:'–í–°–£'</div></div>
                                                                                                    <div class="row">
                                                                                                            
                                                                                            </div>

                                                                                    
                                                                                            <div class="information">
                                                                                                    <div class="source"><p>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</p></div>
                                                                                                    {info_tag.text}
                                                                                            </div></div>
                                                                                    </center>
                                                                            </body>
                                                                    </html>
                                                                    """
                                            f.write(html_template_new)
                                            f.close()
                                            bot.send_document(message.chat.id, document = open(f'{name}.html','rb'))


                                            # –ö–∞—Ä—Ç–∏–Ω–∫–∏
                                            
                                            pictures = []

                                            try:
                                                        img = soup.find("div", {"class": "node-image"}).find("href")
                                                        print(img["data-src"])
                                                        pictures.append(img["data-src"])
                                            except:
                                                        pass
                                                
                                            try:
                                                        p = requests.get(pictures[0], allow_redirects = True,headers={
                                                        "User-Agent" : "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
                                                        })
                                                        out = open("img.jpg", "wb")
                                                        out.write(p.content)
                                                        bot.send_photo(message.chat.id, photo=open('img.jpg', 'rb'))
                                                       
                                                                
                                                        out.close()
                                            except:
                                                        pass

                                            try:
                                                        p = requests.get(pictures[1], allow_redirects = True,headers={
                                                        "User-Agent" : "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
                                                        })
                                                        out = open("img.jpg", "wb")
                                                        out.write(p.content)
                                                        bot.send_photo(message.chat.id, photo=open('img.jpg', 'rb'))
                                                                
                                                        out.close()
                                            except:
                                                        pass
        
        #volunteer(message.text)
        nemezida(message.text)
        


            ### –°–æ–ª–Ω—Ü–µ–ø–µ–∫
        '''
            HTMLFILE = open("messages.html", "r", encoding = 'utf8')
            index = HTMLFILE.read()
            SP = BeautifulSoup(index, 'lxml')
            SP_MAS = SP.find_all("div", class_="message default clearfix")
            for i in SP_MAS:
                    if (f"{name}" in i.text):
                        
                        
                        
                        f = open(f'{name}_SP.html', 'w',  encoding="cp1251")
                        html_template = f"""
                                                    <html>
                                                    <head>
                                                    <title>{name}</title>
                                                    </head>
                                                    <body>
                                                    <h2>{i.text[55:]}</h2>
                                                    
                          



                                                    </body>
                                                    </html>


                                """
                        f.write(html_template)
                        f.close()
                        bot.send_document(message.chat.id, document = open(f'{name}_SP.html','rb'))


'''

        

         

                                        
                                                     
            
        
            
            
                
# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
bot.polling(none_stop=True, interval=0)
